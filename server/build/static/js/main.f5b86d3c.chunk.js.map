{"version":3,"sources":["components/HomePage.js","App.js","index.js"],"names":["toast","configure","HomePage","useState","NoOfFetches","setFetches","email","setEmail","theme_color","React","anchorElNav","setAnchorElNav","formTicker","setFormTicker","loading","setLoading","StockData","setStockData","Zoom","setZoom","Ticker","setTicker","CompanyName","setCompanyName","Companies","setCompanies","MainTitle","setMainTitle","SubTitle","setSubTitle","handleCloseNavMenu","getData","ticker","a","success","fetch","method","query","json","data","zoom","main_title","sub_title","company_name","console","log","message","getCompanies","requestStock","response","status","error","subscribeStock","body","headers","JSON","stringify","slice","warning","unsubscribeStock","color","useEffect","AppBar","position","style","background","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","sx","mr","display","xs","md","fontSize","Box","flexGrow","IconButton","size","onClick","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","FormControl","m","minWidth","InputLabel","Select","value","onChange","e","target","displayEmpty","inputProps","map","company","backgroundColor","Tooltip","title","Button","className","Paper","htmlFor","type","placeholder","required","LoadingButton","endIcon","loadingPosition","elevation","length","gutterBottom","width","height","chartType","loader","options","hAxis","vAxis","series","curveType","animation","startup","easing","duration","colors","rootProps","Grid","container","spacing","item","lg","overflow","scope","class","TextField","label","fullWidth","textAlign","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5b86d3c.chunk.js","sourcesContent":["import { Grid, Paper, AppBar, IconButton, Button, Toolbar, Box, Typography, FormControl, InputLabel, Select, MenuItem, Container, Menu, Tooltip, TextField } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Chart } from \"react-google-charts\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DonutLargeIcon from '@mui/icons-material/DonutLarge';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport EmailIcon from '@mui/icons-material/Email';\nimport TelegramIcon from '@mui/icons-material/Telegram';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\ntoast.configure();\n\nconst HomePage = ()=>{\n    let [NoOfFetches, setFetches] = useState(0);\n    var [email, setEmail] = useState('');\n    const theme_color = '#2a6f97';\n    const theme_color2 = '#168aad';\n    const app_bar_text = 'white';\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [formTicker, setFormTicker] = useState('');\n    const [loading, setLoading] = useState(false);\n    var [StockData, setStockData] = useState([]);\n    var [Zoom, setZoom] = useState([]);\n    var [Ticker, setTicker] = useState(' ');\n    var [CompanyName, setCompanyName] = useState('');\n    var [Companies, setCompanies] = useState([]);\n    var [MainTitle, setMainTitle] = useState('');\n    var [SubTitle, setSubTitle] = useState('');\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n      };\n      const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n      };\n    const getData = async(ticker)=>{\n        try {\n            if(NoOfFetches===0){\n                toast.success(`Fetching Stock Data...Please wait might take a moment`);\n                setFetches(++NoOfFetches);\n            }\n            else {\n                toast.success(`Fetching Stock Data...${ticker}`);\n                setFetches(++NoOfFetches);\n            }\n            const query = await fetch(`api/stock-data/${ticker}/`,{\n                method : 'GET'\n            });\n            const data = await query.json();\n            setStockData(data.data);\n            setZoom(data.zoom);\n            setMainTitle(data.main_title);\n            setSubTitle(data.sub_title);\n            setCompanyName(data.company_name);\n            console.log(data.data);\n            console.log(data.zoom);\n            console.log(StockData);\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n    \n    const getCompanies = async()=>{\n        try {\n            const query = await fetch('api/allcompanies/',{\n                method : 'GET'\n            });\n            const data = await query.json();\n            setCompanies(data.data);\n            setTicker(data.data[0]);\n            console.log(data.data);\n        } catch (error) {\n            console.log(error.message);\n        }  \n    }\n    const requestStock = async()=>{\n        const query = await fetch(`api/stock-request/${formTicker}`, {\n            method : 'GET',\n        });\n        const response = await query.json();\n        if(response.status === \"false\"){\n            toast.error(response.message);\n            console.log(response);\n        }\n        else {\n            toast.success(response.message);\n            console.log(response);\n        }\n        setLoading(false);\n    }\n    const subscribeStock = async()=>{\n        const body = {\"email\" : email};\n        const response = await fetch(`api/subscribe/${Ticker}`, {\n            method : 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        });\n        const data = await response.json();\n        console.log(data);\n        console.log(data.status);\n        if(data.status===\"true\"){\n            console.log(\"Success\");\n            toast(`Subscribed to the Stock ${Ticker.slice(0, -3)} :D`);\n        }\n        else if(data.status===\"false\"){\n            toast.error(data.message);\n        }\n        else {\n            toast.warning(data.message);\n        }\n    };\n    const unsubscribeStock = async()=>{\n        const body = {\"email\" : email};\n        const response = await fetch(`api/unsubscribe/${Ticker}`, {\n            method : 'DELETE',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        });\n        const data = await response.json();\n        console.log(data);\n        console.log(data.status);\n        if(data.status===\"true\"){\n            toast(`Unsubscribed to ${Ticker.slice(0, -3)}. If possible take your time and email me on what went wrong :D`, {color : '#e5e5e5'});\n        }\n        else if(data.status===\"false\"){\n            toast.error(data.message);\n        }\n        else {\n            toast.warning(data.message);\n        }\n    };\n    useEffect(()=>{\n        getCompanies();\n        getData(Ticker);\n        // eslint-disable-next-line\n    },[]);\n\n    return (\n        <div>\n       <AppBar position=\"static\"  style={{ background: theme_color }}>\n        <Container maxWidth=\"xl\">\n            <Toolbar disableGutters>\n            <Typography\n                variant=\"h6\"\n                noWrap\n                component=\"div\"\n                sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n            >\n                <DonutLargeIcon fontSize=\"large\" />\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n                >\n                <MenuIcon />\n                </IconButton>\n                <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                    display: { xs: 'block', md: 'none' },\n                }}\n                >\n                    <MenuItem>\n                        <FormControl style={{color : 'white'}} variant=\"filled\" sx={{ m: 1, minWidth: 200, maxWidth : 300 }}>\n                            <InputLabel style={{color : theme_color}} id=\"demo-simple-select-helper-label\">Ticker</InputLabel>\n                            <Select\n                            value={Ticker}\n                            onChange={e=>{\n                                setTicker(e.target.value);\n                                getData(e.target.value);\n                                handleCloseNavMenu();\n                            }}\n                            displayEmpty\n                            inputProps={{ 'aria-label': 'Without label' }}\n                            >\n                            {Companies.map(company => (\n                                <MenuItem key={company} style={{color : theme_color}} value={company}>\n                                    <Typography style={{color : theme_color}}>{company.slice(0, -3)}</Typography>\n                                </MenuItem>\n                            ))}\n                            </Select>\n                        </FormControl>\n                    </MenuItem>\n                </Menu>\n            </Box>\n            <Typography\n                variant=\"h6\"\n                noWrap\n                component=\"div\"\n                sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n            >\n                <DonutLargeIcon fontSize=\"large\" />  <b>{Ticker.slice(0, -3)}</b>\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 200, maxWidth : 500 }}>\n                    {/* <InputLabel style={{color : app_bar_text}} id=\"demo-simple-select-helper-label\"><b>Ticker</b></InputLabel> */}\n                    <Select\n                    value={Ticker}\n                    onChange={e=>{\n                        setTicker(e.target.value);\n                        getData(e.target.value);\n                    }}\n                \n                    displayEmpty\n                    inputProps={{ 'aria-label': 'Without label' }}\n                    >\n                    {Companies.map(company => (\n                        <MenuItem key={company} style={{backgroundColor : theme_color2}} value={company}>\n                            <Typography style={{color : app_bar_text, fontSize : '20px'}}>{company.slice(0, -3)}</Typography>\n                        </MenuItem>\n                    ))}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            <Box sx={{ flexGrow: 0 }}>\n                <Tooltip title=\"Make Request\">\n                    <Button style={{backgroundColor : 'green'}} size=\"medium\" variant=\"contained\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        REQUEST\n                        <AddCircleIcon />\n                    </Button>\n                </Tooltip>\n            </Box>\n            </Toolbar>\n        </Container>\n        </AppBar>     \n        <div className=\"collapse\" id=\"collapseExample\">\n            <Paper className='p-5 container mt-3'>\n            <form>\n            <h3>STOCK REQUEST FORM</h3><hr />\n            <div className=\"form-group mt-3\">\n                <label htmlFor=\"ticker\">Ticker Code</label>\n                <input type=\"text\" className=\"form-control\" id=\"ticker\" placeholder=\"Ticker\" onChange={e => {setFormTicker(e.target.value)}} required />\n            </div>\n            <LoadingButton\n                endIcon={<SendIcon />}\n                loading={loading}\n                loadingPosition=\"end\"\n                variant=\"contained\"\n                className='mt-3'\n                onClick={()=>{requestStock();setLoading(true);}}\n            >\n                Request\n            </LoadingButton>            \n            </form>\n            </Paper>\n        </div>\n        <div className=\"App\">\n            <Paper elevation={5}>\n                {StockData.length > 10 ? \n                <div>\n                    <Typography variant='h3' className='App mt-3 p-3'>{CompanyName}</Typography>\n                    <h1 className='mt-3 pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> {MainTitle} </Typography></h1>\n                    <Chart\n                        width={'100%'}\n                        height={'500px'}\n                        chartType=\"AreaChart\"\n                        loader={<div>Loading Chart</div>}\n                        data={StockData}\n                        options={{\n                            hAxis: {\n                                title: 'Date',  \n                            },\n                            vAxis: {\n                                title: 'Stock Price',\n                            },\n                            series: {\n                                1: { curveType: 'function' },\n                            },\n                            animation: {\n                                startup: true,\n                                easing: 'linear',\n                                duration: 400,\n                            },\n                            colors: ['#1a535c', '#4ecdc4'],\n                            backgroundColor : 'white'\n                        }}\n                        rootProps={{ 'data-testid': '1' }}\n                    />\n                </div> : \n                <div>\n                    <h1>Waiting...</h1>\n                </div> \n                }\n            </Paper>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={6} lg={6}>\n                    <Paper elevation={5}>\n                                {StockData.length > 10 ? \n                                <div>\n                                <h1 className='mt-3 pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> {SubTitle} </Typography></h1>\n                                <Chart\n                                    width={'100%'}\n                                    height={'500px'}\n                                    chartType=\"AreaChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={Zoom}\n                                    options={{\n                                        hAxis: {\n                                        title: 'Date',\n                                        \n                                        },\n                                        vAxis: {\n                                        title: 'Stock Price',\n                                        },\n                                        series: {\n                                        1: { curveType: 'function' },\n                                        },\n                                        animation: {\n                                            startup: true,\n                                            easing: 'linear',\n                                            duration: 800,\n                                        },\n                                        colors: ['#a41623', '#ef476f'],\n                                        backgroundColor : 'white'\n                                    }}\n                                    rootProps={{ 'data-testid': '2' }}\n                                    />\n                                <div>\n                                </div>\n                                </div> : \n                                <div>\n                                <h1>Waiting...</h1>\n                                </div> }\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                    <div  className='m-2 p-2'>\n                        <Paper elevation={5}>\n                            <h1 className='pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> TABLE </Typography></h1>\n                            <div style={{position: 'relative', height: '500px', overflow: 'auto', display : 'block'}}>\n                                <table className=\"table table-borderless table-bordered table-hover\">\n                                <thead className='thead-dark'>\n                                    <tr>\n                                    <th scope=\"col\">Date</th>\n                                    <th scope=\"col\">Actual</th>\n                                    <th scope=\"col\">Prediction</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {StockData.slice(1).map(data => (\n                                        <tr key={data[0]}>\n                                            <th scope=\"row\">{data[0]}</th>\n                                            <td>{data[1]}</td>\n                                            <td>{data[2]}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                                </table>\n                            </div>\n                        </Paper>\n                    </div>\n                </Grid> \n            </Grid>\n        </div>\n        {/* <hr /> */}\n        <footer class=\"App pt-4 mt-4 border\" style={{backgroundColor : '#ffffff '}}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6} lg={8} style={{backgroundColor : '#ffffff '}}>\n                    <div class=\"d-flex justify-content-between container\">\n                        <Typography variant='h5' style={{color : '#343a40'}}>(UN)SUBSCRIBE TO STOCKS</Typography>\n                        <small class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                        <FormControl style={{color : 'white'}} variant='outlined' sx={{minWidth: 120, maxWidth : 400 }}>\n                            <Select\n                                value={Ticker}\n                                onChange={e=>{\n                                    setTicker(e.target.value);\n                                    getData(e.target.value);\n                                    handleCloseNavMenu();\n                                }}\n                                variant='outlined'\n                                size='small'\n                                displayEmpty\n                                inputProps={{ 'aria-label': 'Without label' }}\n                                >\n                                    {Companies.map(company => (\n                                        <MenuItem key={company} style={{color : theme_color}} value={company}>\n                                            <Typography style={{color : theme_color}}>{company.slice(0, -3)}</Typography>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                        </FormControl>\n                    </div>\n                    <form>\n                        <div className='d-flex justify-content-between mt-2 container'>\n                        <TextField size='small' label=\"Email\" variant=\"filled\" onChange={e => {setEmail(e.target.value)}} fullWidth required />\n                        <Button onClick={()=>subscribeStock()} variant=\"contained\" color=\"success\" size=\"small\"><TelegramIcon fontSize='large'  /></Button>\n                        <Button onClick={()=>unsubscribeStock()} variant=\"contained\" color='error' size=\"small\"><CancelIcon fontSize='large'  /></Button>\n\n                        </div>\n                    </form>\n                    <Typography className='mt-2 container' variant=\"body1\" gutterBottom style={{textAlign : 'justify'}}>\n                        You will be receiving daily email about the chosen stock's prediction. You could track your stock with ease. You no longer need to visit the site everyday.\n                        Make sure you choose your stock before you subscribe.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={6} lg={4}>\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <Typography variant='h5' className='mb-2' style={{color : '#343a40'}}>CONTACT US</Typography>\n                            <div class=\"d-flex justify-content-center\">\n                                <a href='https://github.com/rakshith-crm' target=\"_blank\" rel=\"noreferrer\">\n                                    <GitHubIcon className='icon m-1' fontSize='large' sx={{color : '#343a40'}} />\n                                </a>\n                                <a  href='https://www.linkedin.com/in/rakshith-crm/' target=\"_blank\" rel=\"noreferrer\">\n                                    <LinkedInIcon  className='icon m-1' fontSize='large' sx={{color : '#343a40'}} />\n                                </a>\n                                <a href='mailto:rakshithcrm@gmail.com' target=\"_blank\" rel=\"noreferrer\">\n                                    <EmailIcon className='icon m-1' fontSize='large' sx={{color : '#343a40'}} />\n                                </a>\n                            </div>\n                            <Typography variant='h5' className=\"mt-5 mb-3\" >\n                                    RAKSHITH C.R.M\n                            </Typography>\n                        </div>\n                    </div>                 \n                </Grid>\n            </Grid>\n            \n        </footer>\n\n        </div>\n    );\n}\nexport default HomePage;","import './App.css';\nimport HomePage from './components/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"\" style={{backgroundColor : '#edf6f9'}}>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}