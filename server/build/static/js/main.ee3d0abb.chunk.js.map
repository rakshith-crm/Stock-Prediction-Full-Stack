{"version":3,"sources":["components/HomePage.js","App.js","index.js"],"names":["toast","configure","HomePage","theme_color","theme_color2","app_bar_text","React","useState","anchorElNav","setAnchorElNav","formTicker","setFormTicker","loading","setLoading","StockData","setStockData","Zoom","setZoom","Ticker","setTicker","Companies","setCompanies","handleCloseNavMenu","getData","ticker","a","fetch","method","query","json","data","zoom","console","log","message","getCompanies","requestStock","response","status","error","success","useEffect","AppBar","position","style","background","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","sx","mr","display","xs","md","fontSize","slice","Box","flexGrow","IconButton","size","onClick","event","currentTarget","color","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","FormControl","m","minWidth","InputLabel","Select","value","onChange","e","target","displayEmpty","inputProps","map","company","backgroundColor","borderRadius","Tooltip","title","Button","className","Paper","htmlFor","type","placeholder","required","LoadingButton","endIcon","loadingPosition","Grid","container","spacing","item","lg","elevation","length","gutterBottom","width","height","chartType","loader","options","hAxis","vAxis","series","curveType","rootProps","overflow","scope","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee3d0abb.chunk.js","sourcesContent":["import { Grid, Paper, AppBar, IconButton, Button, Toolbar, Box, Typography, FormControl, InputLabel, Select, MenuItem, Container, Menu, Tooltip } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Chart } from \"react-google-charts\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DonutLargeIcon from '@mui/icons-material/DonutLarge';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nconst HomePage = ()=>{\n    const theme_color = '#2a6f97';\n    const theme_color2 = '#168aad';\n    const app_bar_text = 'white';\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [formTicker, setFormTicker] = useState('');\n    const [loading, setLoading] = useState(false);\n    var [StockData, setStockData] = useState([]);\n    var [Zoom, setZoom] = useState([]);\n    var [Ticker, setTicker] = useState(' ');\n    var [Companies, setCompanies] = useState([]);\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n      };\n      const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n      };\n    const getData = async(ticker)=>{\n        try {\n            const query = await fetch(`api/stock-data/${ticker}/`,{\n                method : 'GET'\n            });\n            const data = await query.json();\n            setStockData(data.data);\n            setZoom(data.zoom);\n            console.log(data.data);\n            console.log(StockData);\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n    \n    const getCompanies = async()=>{\n        try {\n            const query = await fetch('api/allcompanies/',{\n                method : 'GET'\n            });\n            const data = await query.json();\n            setCompanies(data.data);\n            setTicker(data.data[0]);\n            console.log(data.data);\n        } catch (error) {\n            console.log(error.message);\n        }  \n    }\n    const requestStock = async()=>{\n        const query = await fetch(`api/stock-request/${formTicker}`, {\n            method : 'GET',\n        });\n        const response = await query.json();\n        if(response.status === \"false\"){\n            toast.error(response.message);\n            console.log(response);\n        }\n        else {\n            toast.success(response.message);\n            console.log(response);\n        }\n        setLoading(false);\n    }\n    useEffect(()=>{\n        getCompanies();\n        getData(Ticker);\n        // eslint-disable-next-line\n    },[]);\n\n    return (\n        <div>\n       <AppBar position=\"static\"  style={{ background: theme_color }}>\n        <Container maxWidth=\"xl\">\n            <Toolbar disableGutters>\n            <Typography\n                variant=\"h6\"\n                noWrap\n                component=\"div\"\n                sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n            >\n                <DonutLargeIcon fontSize=\"large\" /> <b>{Ticker.slice(0, -3)}</b>\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n                >\n                <MenuIcon />\n                </IconButton>\n                <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                    display: { xs: 'block', md: 'none' },\n                }}\n                >\n                    <MenuItem>\n                        <FormControl style={{color : 'white'}} variant=\"filled\" sx={{ m: 1, minWidth: 200, maxWidth : 300 }}>\n                            <InputLabel style={{color : theme_color}} id=\"demo-simple-select-helper-label\">Ticker</InputLabel>\n                            <Select\n                            value={Ticker}\n                            onChange={e=>{\n                                setTicker(e.target.value);\n                                getData(e.target.value);\n                                handleCloseNavMenu();\n                            }}\n                            displayEmpty\n                            inputProps={{ 'aria-label': 'Without label' }}\n                            >\n                            {Companies.map(company => (\n                                <MenuItem key={company} style={{color : theme_color}} value={company}>\n                                    <Typography style={{color : theme_color}}>{company}</Typography>\n                                </MenuItem>\n                            ))}\n                            </Select>\n                        </FormControl>\n                    </MenuItem>\n                </Menu>\n            </Box>\n            <Typography\n                variant=\"h6\"\n                noWrap\n                component=\"div\"\n                sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n            >\n                <DonutLargeIcon fontSize=\"large\" />  <b>{Ticker.slice(0, -3)}</b>\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                <FormControl style={{backgroundColor : theme_color2, borderRadius : \"200px 200px 200px 200px\"}} variant=\"filled\" sx={{ m: 1, minWidth: 200, maxWidth : 300 }}>\n                    <InputLabel style={{color : app_bar_text}} id=\"demo-simple-select-helper-label\"><b>Ticker</b></InputLabel>\n                    <Select\n                    value={Ticker}\n                    onChange={e=>{\n                        setTicker(e.target.value);\n                        getData(e.target.value);\n                    }}\n                    style={{backgroundColor : theme_color2}}\n                    displayEmpty\n                    inputProps={{ 'aria-label': 'Without label' }}\n                    >\n                    {Companies.map(company => (\n                        <MenuItem key={company} style={{backgroundColor : theme_color2}} value={company}>\n                            <Typography style={{color : app_bar_text}}>{company}</Typography>\n                        </MenuItem>\n                    ))}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            <Box sx={{ flexGrow: 0 }}>\n                <Tooltip title=\"Make Request\">\n                    <Button style={{backgroundColor : 'green'}} size=\"medium\" variant=\"contained\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        REQUEST\n                        <AddCircleIcon />\n                    </Button>\n                </Tooltip>\n            </Box>\n            </Toolbar>\n        </Container>\n        </AppBar>     \n            \n        <div className=\"collapse\" id=\"collapseExample\">\n            <Paper className='p-5 container mt-3'>\n            <form>\n            <h3>STOCK REQUEST FORM</h3><hr />\n            <div className=\"form-group mt-3\">\n                <label htmlFor=\"ticker\">Ticker Code</label>\n                <input type=\"text\" className=\"form-control\" id=\"ticker\" placeholder=\"Ticker\" onChange={e => {setFormTicker(e.target.value)}} required />\n            </div>\n            <LoadingButton\n                endIcon={<SendIcon />}\n                loading={loading}\n                loadingPosition=\"end\"\n                variant=\"contained\"\n                className='mt-3'\n                onClick={()=>{requestStock();setLoading(true);}}\n            >\n                Request\n            </LoadingButton>            \n            </form>\n            </Paper>\n        </div>\n        <div className=\"App\">\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={7} lg={7}>\n                    <Paper elevation={4}>\n                        {StockData.length > 10 ? \n                        <div>\n                        <h1 className='mt-3 pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> PAST 100 DAYS + 1 WEEK </Typography></h1>\n                        <Chart\n                            width={'100%'}\n                            height={'450px'}\n                            chartType=\"LineChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={StockData}\n                            options={{\n                                hAxis: {\n                                title: 'Date',\n                                \n                                },\n                                vAxis: {\n                                title: 'Stock Price',\n                                },\n                                series: {\n                                1: { curveType: 'function' },\n                                },\n                            }}\n                            rootProps={{ 'data-testid': '2' }}\n                            />\n                        <div>\n                        </div>\n                        </div> : \n                        <div>\n                        <h1>Waiting...</h1>\n                        </div> }\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={5} lg={5}>\n                    <Paper elevation={4}>\n                        {StockData.length > 10 ? \n                        <div>\n                        <h1 className='mt-3 pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> PAST 20 DAYS + 1 WEEK </Typography></h1>\n                        <Chart\n                            width={'100%'}\n                            height={'350px'}\n                            chartType=\"LineChart\"\n                            loader={<div>Loading Chart</div>}\n                            data={Zoom}\n                            options={{\n                                hAxis: {\n                                title: 'Date',\n                                \n                                },\n                                vAxis: {\n                                title: 'Stock Price',\n                                },\n                                series: {\n                                1: { curveType: 'function' },\n                                },\n                            }}\n                            rootProps={{ 'data-testid': '2' }}\n                            />\n                        <div>\n                        </div>\n                        </div> : \n                        <div>\n                        <h1>Waiting...</h1>\n                        </div> }\n                    </Paper>\n                </Grid>\n            </Grid>\n            <div  className='m-1 p-2'>\n                <Paper elevation={3}>\n                    <h1 className='pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> TABLE </Typography></h1>\n                    <div style={{position: 'relative', height: '600px', overflow: 'auto', display : 'block'}}>\n                        <table className=\"table table-borderless table-bordered table-hover\">\n                        <thead className='thead-dark'>\n                            <tr>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Actual</th>\n                            <th scope=\"col\">Prediction</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {StockData.slice(1).map(data => (\n                                <tr key={data[0]}>\n                                    <th scope=\"row\">{data[0]}</th>\n                                    <td>{data[1]}</td>\n                                    <td>{data[2]}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                        </table>\n                    </div>\n                </Paper>\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default HomePage;","import './App.css';\nimport HomePage from './components/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"\" style={{backgroundColor : '#edf6f9'}}>\n     <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}