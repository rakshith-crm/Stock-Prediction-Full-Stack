{"version":3,"sources":["components/HomePage.js","App.js","index.js"],"names":["toast","configure","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","HomePage","useState","subcribeListTest","setSubscribeListTest","NoOfFetches","setFetches","email","setEmail","checkedAllSub","setcheckedAllSub","theme_color","React","anchorElNav","setAnchorElNav","formTicker","setFormTicker","loading","setLoading","subLoading1","setSubLoading1","subLoading2","setSubLoading2","StockData","setStockData","Zoom","setZoom","Ticker","setTicker","CompanyName","setCompanyName","Companies","setCompanies","MainTitle","setMainTitle","SubTitle","setSubTitle","handleCloseNavMenu","getData","ticker","a","success","fetch","method","query","json","data","zoom","main_title","sub_title","company_name","console","log","message","getCompanies","requestStock","response","status","error","subscribeStock","body","headers","JSON","stringify","warning","unsubscribeStock","useEffect","AppBar","position","background","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","sx","mr","display","xs","md","fontSize","Box","flexGrow","IconButton","size","onClick","event","currentTarget","color","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","FormControl","m","minWidth","InputLabel","Select","value","onChange","e","target","displayEmpty","inputProps","map","company","slice","backgroundColor","Tooltip","title","Button","className","Paper","htmlFor","type","placeholder","required","LoadingButton","endIcon","loadingPosition","elevation","length","gutterBottom","height","chartType","loader","options","hAxis","vAxis","series","curveType","animation","startup","easing","duration","colors","rootProps","Grid","container","spacing","item","lg","overflow","scope","class","labelId","multiple","split","input","OutlinedInput","label","renderValue","selected","join","Checkbox","checked","ListItemText","primary","indexOf","TextField","fullWidth","textAlign","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8296b93b.chunk.js","sourcesContent":["import { Grid, Paper, AppBar, IconButton, Button, Toolbar, Box, Typography, FormControl, InputLabel, Select, MenuItem, Container, Menu, Tooltip, TextField, OutlinedInput, ListItemText, Checkbox} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Chart } from \"react-google-charts\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DonutLargeIcon from '@mui/icons-material/DonutLarge';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport EmailIcon from '@mui/icons-material/Email';\nimport TelegramIcon from '@mui/icons-material/Telegram';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\n\ntoast.configure();\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst HomePage = ()=>{\n    const [subcribeListTest, setSubscribeListTest] = useState([]);\n    let [NoOfFetches, setFetches] = useState(0);\n    var [email, setEmail] = useState('');\n    var [checkedAllSub, setcheckedAllSub] = useState(false);\n    const theme_color = '#2a6f97';\n    const theme_color2 = '#168aad';\n    const app_bar_text = 'white';\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [formTicker, setFormTicker] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [subLoading1, setSubLoading1] = useState(false);\n    const [subLoading2, setSubLoading2] = useState(false);\n    var [StockData, setStockData] = useState([]);\n    var [Zoom, setZoom] = useState([]);\n    var [Ticker, setTicker] = useState(' ');\n    var [CompanyName, setCompanyName] = useState('');\n    var [Companies, setCompanies] = useState([]);\n    var [MainTitle, setMainTitle] = useState('');\n    var [SubTitle, setSubTitle] = useState('');\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n    const handleSubscribeMore = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setSubscribeListTest(\n          // On autofill we get a stringified value.\n          typeof value === 'string' ? value.split(',') : value,\n        );\n      };\n    const handleCheckAll = (e) => {\n        if(checkedAllSub===false) {\n            setSubscribeListTest(Companies);\n            setcheckedAllSub(true);\n        } else {\n            setSubscribeListTest([]);\n            setcheckedAllSub(false);\n        }\n    };\n    const getData = async(ticker)=>{\n        try {\n            if(NoOfFetches===0){\n                toast.success(`Fetching Stock Data...Please wait might take a moment`);\n                setFetches(++NoOfFetches);\n            }\n            else {\n                toast.success(`Fetching Stock Data...${ticker}`);\n                setFetches(++NoOfFetches);\n            }\n            const query = await fetch(`api/stock-data/${ticker}/`,{\n                method : 'GET'\n            });\n            const data = await query.json();\n            setStockData(data.data);\n            setZoom(data.zoom);\n            setMainTitle(data.main_title);\n            setSubTitle(data.sub_title);\n            setCompanyName(data.company_name);\n            console.log(data.data);\n            console.log(data.zoom);\n            console.log(StockData);\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n    \n    const getCompanies = async()=>{\n        try {\n            const query = await fetch('api/allcompanies/',{\n                method : 'GET'\n            });\n            const data = await query.json();\n            setCompanies(data.data);\n            setTicker(data.data[0]);\n            console.log(data.data);\n        } catch (error) {\n            console.log(error.message);\n        }  \n    }\n    const requestStock = async()=>{\n        const query = await fetch(`api/stock-request/${formTicker}`, {\n            method : 'GET',\n        });\n        const response = await query.json();\n        if(response.status === \"false\"){\n            toast.error(response.message);\n            console.log(response);\n        }\n        else {\n            toast.success(response.message);\n            console.log(response);\n        }\n        setLoading(false);\n    }\n    const subscribeStock = async()=>{\n        const body = {\"email\" : email, \"stocks\" : subcribeListTest};\n        const response = await fetch(`api/subscribe`, {\n            method : 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        });\n        const data = await response.json();\n        console.log(data);\n        console.log(data.status);\n        if(data.status===\"true\"){\n            console.log(\"Success\");\n            toast(data.message);\n        }\n        else if(data.status===\"false\"){\n            toast.error(data.message);\n        }\n        else {\n            toast.warning(data.message);\n        }\n        setSubLoading1(false);\n    };\n    const unsubscribeStock = async()=>{\n        const body = {\"email\" : email, \"stocks\" : subcribeListTest};\n        const response = await fetch(`api/unsubscribe`, {\n            method : 'DELETE',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(body)\n        });\n        const data = await response.json();\n        console.log(data);\n        console.log(data.status);\n        if(data.status===\"true\"){\n            toast(data.message);\n        }\n        else if(data.status===\"false\"){\n            toast.error(data.message);\n        }\n        else {\n            toast.warning(data.message);\n        }\n        setSubLoading2(false);\n    };\n    useEffect(()=>{\n        getCompanies();\n        getData(Ticker);\n        // eslint-disable-next-line\n    },[]);\n\n    return (\n        <div>\n       <AppBar position=\"static\"  style={{ background: theme_color }}>\n        <Container maxWidth=\"xl\">\n            <Toolbar disableGutters>\n            <Typography\n                variant=\"h6\"\n                noWrap\n                component=\"div\"\n                sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n            >\n                <DonutLargeIcon fontSize=\"large\" />\n            </Typography>\n\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n                >\n                <MenuIcon />\n                </IconButton>\n                <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                    display: { xs: 'block', md: 'none' },\n                }}\n                >\n                    <MenuItem>\n                        <FormControl style={{color : 'white'}} variant=\"filled\" sx={{ m: 1, minWidth: 200, maxWidth : 300 }}>\n                            <InputLabel style={{color : theme_color}} id=\"demo-simple-select-helper-label\">Ticker</InputLabel>\n                            <Select\n                            value={Ticker}\n                            onChange={e=>{\n                                setTicker(e.target.value);\n                                getData(e.target.value);\n                                handleCloseNavMenu();\n                            }}\n                            displayEmpty\n                            inputProps={{ 'aria-label': 'Without label' }}\n                            >\n                            {Companies.map(company => (\n                                <MenuItem key={company} style={{color : theme_color}} value={company}>\n                                    <Typography style={{color : theme_color}}>{company}</Typography>\n                                </MenuItem>\n                            ))}\n                            </Select>\n                        </FormControl>\n                    </MenuItem>\n                </Menu>\n            </Box>\n            <Typography\n                variant=\"h6\"\n                noWrap\n                component=\"div\"\n                sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n            >\n                <DonutLargeIcon fontSize=\"large\" />  <b>{Ticker.slice(0, -3)}</b>\n            </Typography>\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 200, maxWidth : 500 }}>\n                    {/* <InputLabel style={{color : app_bar_text}} id=\"demo-simple-select-helper-label\"><b>Ticker</b></InputLabel> */}\n                    <Select\n                    value={Ticker}\n                    onChange={e=>{\n                        setTicker(e.target.value);\n                        getData(e.target.value);\n                    }}\n                \n                    displayEmpty\n                    inputProps={{ 'aria-label': 'Without label' }}\n                    >\n                    {Companies.map(company => (\n                        <MenuItem key={company} style={{backgroundColor : theme_color2}} value={company}>\n                            <Typography style={{color : app_bar_text, fontSize : '20px'}}>{company}</Typography>\n                        </MenuItem>\n                    ))}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            <Box sx={{ flexGrow: 0 }}>\n                <Tooltip title=\"Make Request\">\n                    <Button style={{backgroundColor : 'green'}} size=\"medium\" variant=\"contained\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        REQUEST\n                        <AddCircleIcon />\n                    </Button>\n                </Tooltip>\n            </Box>\n            </Toolbar>\n        </Container>\n        </AppBar>     \n        <div className=\"collapse\" id=\"collapseExample\">\n            <Paper className='p-5 container mt-3'>\n            <form>\n            <h3>STOCK REQUEST FORM</h3><hr />\n            <div className=\"form-group mt-3\">\n                <label htmlFor=\"ticker\">Ticker Code</label>\n                <input type=\"text\" className=\"form-control\" id=\"ticker\" placeholder=\"Ticker\" onChange={e => {setFormTicker(e.target.value)}} required />\n            </div>\n            <LoadingButton\n                endIcon={<SendIcon />}\n                loading={loading}\n                loadingPosition=\"end\"\n                variant=\"contained\"\n                className='mt-3'\n                onClick={()=>{requestStock();setLoading(true);}}\n            >\n                Request\n            </LoadingButton>            \n            </form>\n            </Paper>\n        </div>\n        <div className=\"App\">\n            <Paper elevation={5}>\n                {StockData.length > 10 ? \n                <div>\n                    <Typography variant='h3' className='App mt-3 p-3'>{CompanyName}</Typography>\n                    <h1 className='mt-3 pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> {MainTitle} </Typography></h1>\n                    <Chart\n                        width={'100%'}\n                        height={'500px'}\n                        chartType=\"AreaChart\"\n                        loader={<div>Loading Chart</div>}\n                        data={StockData}\n                        options={{\n                            hAxis: {\n                                title: 'Date',  \n                            },\n                            vAxis: {\n                                title: 'Stock Price',\n                            },\n                            series: {\n                                1: { curveType: 'function' },\n                            },\n                            animation: {\n                                startup: true,\n                                easing: 'linear',\n                                duration: 400,\n                            },\n                            colors: ['#1a535c', '#4ecdc4'],\n                            backgroundColor : 'white'\n                        }}\n                        rootProps={{ 'data-testid': '1' }}\n                    />\n                </div> : \n                <div>\n                    <h1>Waiting...</h1>\n                </div> \n                }\n            </Paper>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={6} lg={6}>\n                    <Paper elevation={5}>\n                                {StockData.length > 10 ? \n                                <div>\n                                <h1 className='mt-3 pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> {SubTitle} </Typography></h1>\n                                <Chart\n                                    width={'100%'}\n                                    height={'500px'}\n                                    chartType=\"AreaChart\"\n                                    loader={<div>Loading Chart</div>}\n                                    data={Zoom}\n                                    options={{\n                                        hAxis: {\n                                        title: 'Date',\n                                        \n                                        },\n                                        vAxis: {\n                                        title: 'Stock Price',\n                                        },\n                                        series: {\n                                        1: { curveType: 'function' },\n                                        },\n                                        animation: {\n                                            startup: true,\n                                            easing: 'linear',\n                                            duration: 800,\n                                        },\n                                        colors: ['#a41623', '#ef476f'],\n                                        backgroundColor : 'white'\n                                    }}\n                                    rootProps={{ 'data-testid': '2' }}\n                                    />\n                                <div>\n                                </div>\n                                </div> : \n                                <div>\n                                <h1>Waiting...</h1>\n                                </div> }\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={6} lg={6}>\n                    <div  className='m-2 p-2'>\n                        <Paper elevation={5}>\n                            <h1 className='pt-3'><Typography variant=\"h4\" gutterBottom component=\"div\"> TABLE </Typography></h1>\n                            <div style={{position: 'relative', height: '500px', overflow: 'auto', display : 'block'}}>\n                                <table className=\"table table-borderless table-bordered table-hover\">\n                                <thead className='thead-dark'>\n                                    <tr>\n                                    <th scope=\"col\">Date</th>\n                                    <th scope=\"col\">Actual</th>\n                                    <th scope=\"col\">Prediction</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {StockData.slice(1).map(data => (\n                                        <tr key={data[0]}>\n                                            <th scope=\"row\">{data[0]}</th>\n                                            <td>{data[1]}</td>\n                                            <td>{data[2]}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                                </table>\n                            </div>\n                        </Paper>\n                    </div>\n                </Grid> \n            </Grid>\n        </div>\n        {/* <hr /> */}\n        <footer class=\"App pt-4 mt-4 border\" style={{backgroundColor : '#ffffff ', height : 'auto'}}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6} lg={8} style={{backgroundColor : '#ffffff '}}>\n                    <div class=\"d-flex justify-content-between container\">\n                    <Typography variant='h5' style={{color : '#343a40'}}>(UN)SUBSCRIBE TO STOCKS</Typography>\n\n                        <FormControl sx={{minWidth: 150, maxWidth : 150 }}>\n                            <InputLabel id=\"demo-multiple-checkbox-label\" style={{backgroundColor : 'white'}}> <b className='p-2'>Choose Stocks</b></InputLabel>\n                            <Select\n                            labelId=\"demo-multiple-checkbox-label\"\n                            id=\"demo-multiple-checkbox\"\n                            multiple\n                            value={subcribeListTest}\n                            onChange={handleSubscribeMore}\n                            input={<OutlinedInput label=\"Choose Stocks\" />}\n                            renderValue={(selected) => selected.join(', ')}\n                            MenuProps={MenuProps}\n                            variant='outlined'\n                            >\n                                    <MenuItem style={{color : theme_color}}>\n                                            <Checkbox checked={checkedAllSub} onChange={handleCheckAll} />\n                                            <ListItemText primary={'All'} style={{color : theme_color}} />\n                                    </MenuItem>\n                                    {Companies.map(company => (\n                                        <MenuItem key={company} style={{color : theme_color}} value={company}>\n                                            <Checkbox checked={subcribeListTest.indexOf(company) > -1} />\n                                            <ListItemText primary={company} style={{color : theme_color}} />\n                                        </MenuItem>\n                                    ))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <form>\n                        <div className='d-flex justify-content-between mt-2 container'>\n                        <TextField size='small' label=\"Email\" variant=\"filled\" onChange={e => {setEmail(e.target.value)}} fullWidth required />\n                        {/* Button to Subscribe */}\n                        <LoadingButton\n                            onClick={()=>{\n                                setSubLoading1(true);\n                                subscribeStock();\n                            }}\n                            loading={subLoading1}\n                            color=\"success\"\n                            size=\"small\"\n                            loadingPosition=\"end\"\n                            variant=\"contained\">\n                                <TelegramIcon fontSize='large' />\n                        </LoadingButton>\n                        {/* Button to Unsubscribe */}\n                        <LoadingButton\n                            onClick={()=>{\n                                setSubLoading2(true);\n                                unsubscribeStock();\n                            }}\n                            loading={subLoading2}\n                            color=\"error\"\n                            size=\"small\"\n                            loadingPosition=\"end\"\n                            variant=\"contained\">\n                                <CancelIcon fontSize='large' />\n                        </LoadingButton>\n                        {/* <Button onClick={()=>subscribeStock()} variant=\"contained\" color=\"success\" size=\"small\"><TelegramIcon fontSize='large'  /></Button> */}\n                        {/* <Button onClick={()=>unsubscribeStock()} variant=\"contained\" color='error' size=\"small\"><CancelIcon fontSize='large'  /></Button> */}\n\n                        </div>\n                    </form>\n                    <small class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n\n                    <Typography className='mt-2 container' variant=\"body1\" gutterBottom style={{textAlign : 'justify'}}>\n                        You will be receiving daily email about the chosen stock's prediction. You could track your stock with ease. You no longer need to visit the site everyday.\n                        Make sure you choose your stock before you subscribe.\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} md={6} lg={4}>\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <Typography variant='h5' className='mb-2' style={{color : '#343a40'}}>CONTACT US</Typography>\n                            <div class=\"d-flex justify-content-center\">\n                                <a href='https://github.com/rakshith-crm' target=\"_blank\" rel=\"noreferrer\">\n                                    <GitHubIcon className='icon m-1' fontSize='large' sx={{color : '#343a40'}} />\n                                </a>\n                                <a  href='https://www.linkedin.com/in/rakshith-crm/' target=\"_blank\" rel=\"noreferrer\">\n                                    <LinkedInIcon  className='icon m-1' fontSize='large' sx={{color : '#343a40'}} />\n                                </a>\n                                <a href='mailto:rakshithcrm@gmail.com' target=\"_blank\" rel=\"noreferrer\">\n                                    <EmailIcon className='icon m-1' fontSize='large' sx={{color : '#343a40'}} />\n                                </a>\n                            </div>\n                            <Typography variant='h5' className=\"mt-5 mb-3\" >\n                                    RAKSHITH C.R.M\n                            </Typography>\n                        </div>\n                    </div>                 \n                </Grid>\n            </Grid>\n            \n        </footer>\n\n        </div>\n    );\n}\nexport default HomePage;","import './App.css';\nimport HomePage from './components/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"\" style={{backgroundColor : '#edf6f9'}}>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}